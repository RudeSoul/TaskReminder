{"version":3,"sources":["components/Form.js","components/Task.js","components/Verify.js","components/Filter.js","components/search.js","App.js","index.js"],"names":["Form","state","inputVal","selectVal","searchTerms","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","addTask","className","onSubmit","this","type","placeholder","required","onChange","Component","Task","handleDel","title","callVerify","handleComplete","isCompleteFn","changeColor","isComplete","style","backgroundColor","id","onClick","React","Verify","message","onYes","onNo","Filter","filter","changeFilter","tasksCount","checked","bind","Search","searchChanged","val","App","prevState","task","tasks","concat","selectedTask","applyVerify","selectedTasktitle","tasktitle","delTask","callback","map","filterTasks","filters","length","evt","tasksCopy","item","toLowerCase","includes","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cfbb84a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n\n    state = {\n        inputVal: '',\n        selectVal: '',\n        searchTerms: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name + 'Val']: e.target.value\n        })\n    }\n \n    handleSubmit = (e) => {\n        const {inputVal, selectVal} = this.state;\n        e.preventDefault();\n        this.props.addTask(inputVal, selectVal);\n        // this.props.searchChanged(searchTerms, selectVal);\n        this.setState({\n            inputVal: '',\n            selectVal: '',\n            // searchTerms:'',\n            \n        })\n    }\n    render() {\n        return (\n            <div>\n            <form className=\"inputForm\" onSubmit={this.handleSubmit}>\n\n                    <input\n                        type=\"text\"\n                        name=\"input\"\n                        placeholder=\"Add your task here..\" required\n                            value={this.state.inputVal}\n                            onChange={this.handleChange}\n                        />\n                 \n                <input type=\"submit\" value=\"+\" />\n                \n            </form>\n\n               \n            \n            </div>\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\n\nclass Task extends React.Component {\n    handleDel = () => {\n        const title = this.props.title;\n        this.props.callVerify(title);\n    }\n    handleComplete = () => {\n        const title = this.props.title;\n        this.props.isCompleteFn(title);\n    }\n    render() {\n        const bgColor = {\n            \"medium\": \"salmon\",\n        }\n        const {\n            changeColor,\n            title,\n            isComplete,\n        } = this.props;\n        return (\n            <div className=\"task\">\n                <div className=\"row\"\n                    style={!isComplete ? { backgroundColor: bgColor[changeColor] }\n                        : { backgroundColor: 'rgb(104, 104, 104)' }\n                    }>\n\n                    <button\n                        id=\"complete\"\n                        onClick={this.handleComplete}>\n                        {isComplete ? <span>&#10004;</span> : <span></span>}\n                    </button>\n\n\n                    <p>{title}</p>\n\n\n                    <button\n                        onClick={this.handleDel}>\n                        Delete\n                        </button>\n                </div>\n\n            </div>\n        );\n    }\n};\n\nexport default Task;","import React from 'react';\n\n  const Verify = (props) => {\n\n        return (\n\n            <div className=\"verify\">\n                <div>\n                    <p>{props.message}</p>\n                    <button onClick={props.onYes}>Yes</button>\n                    <button onClick={props.onNo}>No</button>\n                </div>\n            </div>\n        );\n    \n}\n\nexport default Verify;","import React from 'react';\n\nconst Filter = (props) => {\n    const { filter, changeFilter, tasksCount } = props;\n    return (\n        <div id=\"filter\">\n            <div className=\"row\">\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"Filter\"\n                        value=\"all\"\n                        checked={filter === 'all' ? true : false}\n                        onChange={changeFilter.bind(null, 'all')}\n                    />\n\n                    &nbsp;All&nbsp;\n                    \n                    ({tasksCount(\"all\")})\n\n                </label>\n\n\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"Filter\"\n                        value=\"uncompleted\"\n                        checked={filter === 'uncompleted' ? true : false}\n                        onChange={changeFilter.bind(null, 'uncompleted')}\n                    />\n                    &nbsp;Remaining&nbsp;\n                    ({tasksCount(\"uncompleted\")})\n\n                </label>\n\n\n\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"Filter\"\n                        value=\"completed\"\n                        checked={filter === 'completed' ? true : false}\n                        onChange={changeFilter.bind(null, 'completed')}\n                    />\n                    &nbsp;Completed&nbsp;\n                    ({tasksCount(\"completed\")})\n\n                </label>\n            </div>\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\r\n\r\nclass Search extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            inputVal: '',\r\n            selectVal: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name + 'Val']: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const { inputVal, selectVal } = this.state;\r\n        e.preventDefault();\r\n        this.props.searchChanged(inputVal, selectVal);\r\n        this.setState({\r\n            inputVal: '',\r\n            selectVal: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"inputForm\" onSubmit={this.handleSubmit}>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"input\"\r\n                        placeholder=\"Search your task here..\" required\r\n                        value={this.props.val}\r\n                        onChange={e => this.props.searchChanged(e)}\r\n                    />\r\n\r\n                    <input type=\"submit\" value=\"+\" />\r\n\r\n                </form>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport Form from './components/Form';\nimport Task from './components/Task';\nimport Verify from './components/Verify';\nimport Filter from './components/Filter';\nimport './app.css';\nimport Search from './components/search';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            tasks: [\n                { title: \"Learn React \", isComplete: true },\n                { title: \"Get A Job\", isComplete: true },\n                { title: \"Build Tools\", isComplete: false },\n                { title: \"Earn Money\", isComplete: false },\n                { title: \"SLEEP LIKE PANDA\", isComplete: false }\n            ],\n            applyVerify: null,\n            selectedTasktitle: null,\n            filter: 'all',\n            searchTerms: '',\n        }\n    }\n\n    addTask = (title) => {\n        this.setState((prevState) => {\n            const task = { title, isComplete: false };\n            return ({\n                tasks: prevState.tasks.concat([task])\n            })\n        })\n    }\n\n    callVerify = (selectedTask) => {\n        this.setState({\n            applyVerify: true,\n            selectedTasktitle: selectedTask\n        })\n    }\n    onYes = () => {\n        const tasktitle = this.state.selectedTasktitle;\n        this.delTask(tasktitle, () => {\n            this.setState({\n                applyVerify: false,\n                selectedTasktitle: null,\n            })\n        });\n    }\n    onNo = () => {\n        this.setState({\n            applyVerify: false,\n            selectedTasktitle: null,\n        })\n    }\n    delTask = (title, callback) => {\n\n        this.setState(prevState => {\n            return (\n                {\n                    tasks: prevState.tasks.filter(task => task.title !== title)\n                }\n            )\n        }, callback)\n    }\n    isCompleteFn = (tasktitle) => {\n        this.setState(\n            (prevState) => {\n                const updatedTasks = prevState.tasks.map(task => {\n                    if (task.title === tasktitle)\n                        task.isComplete = !task.isComplete;\n\n                    return task;\n                });\n                return (\n                    {\n                        tasks: updatedTasks\n                    }\n                )\n            }\n        )\n    }\n\n    changeFilter = (filter) => {\n        this.setState({\n            filter: filter\n        }\n        );\n\n    }\n    filterTasks = (filter) => {\n        const tasks = this.state.tasks;\n        return (tasks.filter(this.filters[filter]))\n    }\n    tasksCount = (filter) => {\n        const tasks = this.state.tasks;\n        return (tasks.filter(this.filters[filter]).length)\n    }\n    filters = {\n        \"all\": task => task,\n        \"uncompleted\": task => !task.isComplete,\n        \"completed\": task => task.isComplete,\n    }\n    searchChanged = (evt) => {\n        this.setState({ searchTerms: evt.target.value })\n    }\n\n\n    render() {\n        const filter = this.state.filter;\n        const tasks = this.state.searchTerms === '' ? this.filterTasks(filter) : this.filterTasks(filter).filter(item => (item.title.toLowerCase().includes(this.state.searchTerms.toLowerCase())));\n        const tasksCopy = tasks;\n\n\n        return (\n            <div>\n                <h1>DayMarker</h1>\n\n                <Form\n                    addTask={this.addTask}\n                />\n                <Search\n                    searchChanged={this.searchChanged}\n                    val={this.state.searchTerms}\n                />\n\n                <div className=\"row\">\n                    <Filter\n                        tasksCount={this.tasksCount}\n                        filter={this.state.filter}\n                        changeFilter={this.changeFilter}\n                    />\n                </div>\n\n                <div>\n                    {\n                        this.state.applyVerify &&\n                        <Verify onYes={this.onYes}\n                            onNo={this.onNo}\n                            message=\"Delete Task ?\"\n                        />\n                    }\n\n                    {this.state.tasks.length === 0 && <div>No Tasks !</div>}\n\n                    {this.state.tasks.length !== 0 &&\n                        tasksCopy.map(task =>\n                            <Task key={task.title}\n                                {...task}\n                                callVerify={this.callVerify}\n                                isCompleteFn={this.isCompleteFn}\n                            />\n\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}